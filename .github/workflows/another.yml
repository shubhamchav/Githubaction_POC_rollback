name: Another Workflow
on:
  push:
    branches:
      - master

env:
  ROLLBACK_ATTEMPTED: 'no'  # Define it as a string initially.

jobs:
  set-environment:
    runs-on: ubuntu-latest
    steps:
      - name: Set environment
        run: echo "Setting environment"
      - name: Print ROLLBACK_ATTEMPTED Before
        run: echo "ROLLBACK_ATTEMPTED Before:${{ env.ROLLBACK_ATTEMPTED }}"

  prerequisite:
    runs-on: ubuntu-latest
    needs: set-environment
    steps:
      - name: Prerequisite step
        run: echo "Running prerequisite"

  get-computer-name:
    runs-on: ubuntu-latest
    needs: prerequisite
    steps:
      - name: Get computer name
        run: echo "Computer name"

  copy-from-s3:
    runs-on: windows-latest
    needs: get-computer-name
    steps:
      - name: Copy from S3
        run: |
          echo "Copying from S3"
          false  # Force failure to trigger the check-condition job

  check-condition:
    needs: [set-environment, prerequisite, get-computer-name, copy-from-s3]
    if: ${{ always() && (needs.set-environment.result == 'failure' || needs.prerequisite.result == 'failure' || needs.get-computer-name.result == 'failure' || needs.copy-from-s3.result == 'failure') }}
    uses: shubhamchav/20.Reusing_Workflow/.github/workflows/base.yml@master
    with:
      VERSION: ${{ github.run_number }}
      ENVIRONMENT: 'production'
      ROLLBACK_ATTEMPTED: 'yes'  # Pass as string 'true'

  print-env:
    runs-on: ubuntu-latest
    needs: [set-environment, prerequisite, get-computer-name, copy-from-s3]
    if: ${{ always() }}
    steps:
      - name: Check rollback_attempted status
        run: |
          echo "ROLLBACK_ATTEMPTED After: ${{ needs.check-condition.outputs.ROLLBACK_ATTEMPTED || 'no' }}"
  
  deployment:
    if: ${{ github.event_name == 'push' || github.event_name == 'workflow_dispatch' }}
    needs: [set-environment, prerequisite, get-computer-name, copy-from-s3, check-condition]
    uses: shubhamchav/20.Reusing_Workflow/.github/workflows/base.yml@master
    with:
      VERSION: ${{ github.run_number }} 
      ENVIRONMENT: 'production'
